<?xml version="1.0" encoding="UTF-8"?>

<!--Example logback configuration using a Splunk HEC Appender, Splunk REST Appender  or Splunk Raw TCP Appender -->

<configuration>

<!--Send log events to  a Splunk REST endpoint-->
  <appender name="splunkrest" class="com.splunk.logging.logback.appender.SplunkRestAppender">
  <!--Visit http://www.baboonbones.com/#activation to obtain a non-expiring key -->
    <activationKey>YOURKEY</activationKey>
    <port>8089</port>
    <host>localhost</host>
    <delivery>stream</delivery>
    <user>admin</user>
    <metaSourcetype>testing</metaSourcetype>
    <pass>foo</pass>
    <maxQueueSize>5MB</maxQueueSize>
    <dropEventsOnQueueFull>false</dropEventsOnQueueFull>
    <metaSource>rest</metaSource>
    <metaIndex>main</metaIndex>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>%m%n</pattern>
      <!-- optionally you can enrich the messages with formatting tokens from the logging framework
      <pattern>%d %m%n</pattern>
      <pattern>%m loglevel="%p"%n</pattern>
       -->
    </layout>
  </appender>
  
<!--Send log events to a Splunk Raw TCP server socket-->
  <appender name="splunkrawtcp" class="com.splunk.logging.logback.appender.SplunkRawTCPAppender">
  <!--Visit http://www.baboonbones.com/#activation to obtain a non-expiring key -->
    <activationKey>YOURKEY</activationKey>
    <port>5151</port>
    <host>somehost</host>
    <maxQueueSize>5MB</maxQueueSize>
    <dropEventsOnQueueFull>false</dropEventsOnQueueFull>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>%m%n</pattern>
      <!-- optionally you can enrich the messages with formatting tokens from the logging framework
      <pattern>%d %m%n</pattern>
      <pattern>%m loglevel="%p"%n</pattern>
       -->
    </layout>
  </appender>
  
<!--Send log events to a Splunk HEC Endpoint-->
  <appender name="splunkhec" class="com.splunk.logging.logback.appender.SplunkHECAppender">
  <!--Visit http://www.baboonbones.com/#activation to obtain a non-expiring key -->
    <activationKey>YOURKEY</activationKey>
    <port>8088</port>
    <host>localhost</host>
    <token>4DBFC24E-19A2-4D31-9055-2139C818DBDD</token>
    <https>false</https>
    <poolsize>1</poolsize>
    <index>main</index>
    <source>logback</source>
    <sourcetype>test-data</sourcetype>
    <maxQueueSize>5MB</maxQueueSize>
    <dropEventsOnQueueFull>false</dropEventsOnQueueFull>
    <batchMode>true</batchMode>
    <maxBatchSizeBytes>1MB</maxBatchSizeBytes>
    <maxBatchSizeEvents>5</maxBatchSizeEvents>
    <maxInactiveTimeBeforeBatchFlush>5000</maxInactiveTimeBeforeBatchFlush>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>%m</pattern>
      <!-- optionally you can enrich the messages with formatting tokens from the logging framework
      <pattern>%d %m%n</pattern>
      <pattern>%m loglevel="%p"%n</pattern>
       -->
    </layout>
  </appender>
  
<!--Send log events to a console-->
  <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
    <Target>System.out</Target>
    <encoder>
      <pattern>%d [%thread] %level %mdc %logger{35} - %msg%n</pattern>
    </encoder>
  </appender>
  
<!--Splunk logger-->
  <logger name="splunk.logger" additivity="false" level="INFO">
     <appender-ref ref="splunkrawtcp"/>
  </logger>
  
<!--Root logger-->
  <root level="INFO">
    <appender-ref ref="stdout"/>
  </root>
</configuration>